$breakpoints-map: (
	xxxxl: 1400,
	xxxl: 1250,
	xxl: 1180,
	xl: 1080,
	l: 960,
	m: 768,
	s: 640,
	xs: 480,
	xxs: 375
);

@function get-breakpoints-value($value) {
	@if (map-has-key($breakpoints-map, $value)) {
		@return map-get($breakpoints-map, $value);
	} @else {
		@return $value;
	}
}

@mixin media($value-1: false, $value-2: false) {
	$query: 0;
	$query-to: 0;
	@if ($value-1 == "from") {
		$query: get-breakpoints-value($value-2) + 1 + px;
		@media screen and (min-width: #{$query}) {
			@content;
		}
	} @else if ($value-2 != false) {
		$query: get-breakpoints-value($value-1) + 1 + px;
		$query-to: get-breakpoints-value($value-2) + px;
		@media screen and (min-width: #{$query}) and (max-width: #{$query-to}) {
			@content;
		}
	} @else {
		$query: get-breakpoints-value($value-1) + px;
		@media screen and (max-width: #{$query}) {
			@content;
		}
	}
}

/*
Использование:
@include media (param1, param2) {}

@include media (xs) {} === screen and (max-width: 480)
@include media (500) {} === screen and (max-width: 500)
@include media (from, xs) {} === (min-width: 481)
@include media (from, 500) {} === (min-width: 501)
@include media (xs, s) {} === (min-width: 481) and (max-width: 640)
@include media (400, 500) {} === (min-width: 401) and (max-width: 500)
@include media (xs, 500) {} === (min-width: 481) and (max-width: 500)
*/

